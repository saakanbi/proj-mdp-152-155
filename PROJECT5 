# Root main.tf
module "jenkins_stack" {
  source       = "./modules/ec2"
  instance_name = "jenkins-stack"
  ami_id        = var.ami_id
  instance_type = var.instance_type
  subnet_id     = var.subnet_id
  key_name      = var.key_name
  security_group_ids = [aws_security_group.allow_ssh_http.id]
  user_data     = file("./scripts/jenkins_user_data.sh")
  tags = {
    Name = "jenkins-stack"
  }
}

module "flask_app" {
  source       = "./modules/ec2"
  instance_name = "flask-monitor"
  ami_id        = var.ami_id
  instance_type = var.instance_type
  subnet_id     = var.subnet_id
  key_name      = var.key_name
  security_group_ids = [aws_security_group.allow_ssh_http.id]
  user_data     = file("./scripts/flask_user_data.sh")
  tags = {
    Name = "flask-monitor"
  }
}

module "monitoring_stack" {
  source       = "./modules/ec2"
  instance_name = "prometheus-grafana"
  ami_id        = var.ami_id
  instance_type = var.instance_type
  subnet_id     = var.subnet_id
  key_name      = var.key_name
  security_group_ids = [aws_security_group.allow_ssh_http.id]
  user_data     = file("./scripts/monitoring_user_data.sh")
  tags = {
    Name = "prometheus-grafana"
  }
}

resource "aws_security_group" "allow_ssh_http" {
  name        = "allow_ssh_http"
  description = "Allow SSH and HTTP"
  vpc_id      = var.vpc_id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 3000
    to_port     = 3000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 9000
    to_port     = 9000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

variable "ami_id" {}
variable "instance_type" {}
variable "subnet_id" {}
variable "vpc_id" {}
variable "key_name" {}

output "jenkins_stack_ip" {
  value = module.jenkins_stack.public_ip
}

output "flask_app_ip" {
  value = module.flask_app.public_ip
}

output "monitoring_stack_ip" {
  value = module.monitoring_stack.public_ip
}
